<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">

    <!--<Style x:Key="FontAwesome">
        <Setter Property="TextElement.FontFamily" Value="/Font/fontawesome-webfont.ttf" />
    </Style>-->
    <!--DASHBOARD -->
    <Style TargetType="TextBlock" x:Key="LeftMenuLabel">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <!--<Setter Property="Foreground" Value="#FF660032"></Setter>-->
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
    </Style>

    <Style TargetType="DockPanel" x:Key="PageTitleBlock">
        <Setter Property="Background" Value="#DDDDDD"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>

    <Style TargetType="Label" x:Key="PageTitle">
        <Setter Property="Foreground" Value="#FF300000"></Setter>
        <Setter Property="FontSize" Value="22"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="txtSearchString">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Width" Value="300"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="0,20"></Setter>
    </Style>

    <Style x:Key="MetroCircleButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Rectangle Margin="8"
                             Stroke="{DynamicResource BlackBrush}"
                             StrokeDashArray="2 2"
                             StrokeThickness="1"
                             SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroSquareButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource MetroCircleButtonFocusVisual}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource GrayBrush3}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}"
                                 Margin="4"
                                 StrokeThickness="0" />
                        <Rectangle x:Name="ellipsebg"
                                 Fill="{DynamicResource BlackBrush}"
                                 Opacity="0"
                                 Margin="4"
                                 StrokeThickness="0" />
                        <Rectangle x:Name="ellipse"
                                 Margin="4"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" />
                        <ContentPresenter x:Name="content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="0.3"
                                                         Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!-- some out fading -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="LeftMenuButton">
        <Setter Property="Background" Value="#FF763C21"/>
        <Setter Property="Margin" Value="0 3 0 0"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#99A0522D"/>
                <!--<Setter Property="Margin" Value="0 10 0 0"></Setter>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="DataGridCell" x:Key="DGCellContent">
        <Setter Property="Padding" Value="10 0 0 0"></Setter>
    </Style>-->

    <Style TargetType="DataGridCell" x:Key="gridCellStyle">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#EEEEEE"/>
                <Setter Property="Foreground" Value="#000000"/>
                <Setter Property="BorderBrush" Value="#dddddd" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" Margin="5,2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14"></Setter>
    </Style>
    
    <Style TargetType="DataGrid" x:Key="DataGridWrapper">
        <Setter Property="Width" Value="Auto"></Setter>
        <Setter Property="Height" Value="Auto"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="#ACACAC"></Setter>
        <Setter Property="HorizontalGridLinesBrush" Value="#BBBBBB"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="TabItem" x:Key="TabItemHeader">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="DataGridHeaderFont" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap" Text="{Binding}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="15"></Setter>
                                <Setter Property="FontWeight" Value="Medium"></Setter>
                                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                                <Setter Property="TextAlignment" Value="Center"></Setter>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="DockPanel" x:Key="PageFooterBlock">
        <Setter Property="Background" Value="#BBBBBB"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Margin" Value="10,-2,10,0"></Setter>
    </Style>

    <Style x:Key="RequireTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="Red" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RequireCombobox" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="bg" BorderBrush="Red" BorderThickness="1">
                        <ScrollViewer x:Name="PART_Popup" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="SelectedIndex" Value="0">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ComboBox" x:Key="mycustom">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RequireNumericUpDown" TargetType="{x:Type Controls:NumericUpDown}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="Red" BorderThickness="1">
                        <ScrollViewer x:Name="PART_TextBox" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="Text" Value="0">
                            <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>